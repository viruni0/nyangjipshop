<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace = "kr.co.dong.boardMapper">

	<!-- user join -->
	<resultMap type="UserDTO" id="UserDTO">
		<result column="u_p_id" property="u_p_id"/>
		<result column="u_p_snumber" property="u_p_snumber"/>
		<result column="u_nname" property="u_nname"/>
		<result column="u_name" property="u_name"/>
		<result column="u_pw" property="u_pw"/>
		<result column="u_phone" property="u_phone"/>
		<result column="u_address" property="u_address"/>
		<result column="u_gender" property="u_gender"/>
		<result column="u_mail" property="u_mail"/>
		<result column="u_state" property="u_state"/>
		<result column="u_b_cnt" property="u_b_cnt"/>
		<collection property="member_user" resultMap="Member_user"/>
	</resultMap>
	
	<!-- user join용 member -->
	<resultMap type="Member_user" id="Member_user">
		<result column="m_p_grade" property="m_p_grade"/>
		<result column="u_p_id" property="u_p_id"/>
		<result column="m_u_exp" property="m_u_exp"/>
		<result column="m_u_coupon" property="m_u_coupon"/>
	</resultMap>
	
	<!-- 메인 조회 -->
	<select id="main" resultType="ProductDTO">
	   SELECT b_p_code, b_product,
	   b_price, b_sale, b_discount, b_spoint
	   FROM board_product
	</select>

   <!--  글 전체목록 -->
   <select id="List" parameterType="java.lang.Integer" resultType="BoardDTO">
      SELECT b_p_bno, b_title, b_date, u_p_id, b_v_cnt
      FROM board
      where b_state = 1
      LIMIT #{startList}, #{listSize}
   </select>
   
   <!--  전체 글 개수 -->
   <select id="paging" resultType="java.lang.Integer">
      SELECT count(*)
      FROM board
   </select>

   <!--  글 읽기 -->
   <select id="detail" parameterType="java.lang.Integer" resultType="BoardDTO">
      SELECT *
      FROM board
      where b_p_bno = #{b_p_bno}
   </select>

   <!--  글 쓰기 -->
   <insert id="register" parameterType="BoardDTO">
      INSERT INTO board(b_p_bno, b_p_category, b_title, b_content, u_p_id, b_date, b_v_cnt, b_state)
          VALUES (#{b_p_bno}, "자유게시판", #{b_title}, #{b_content}, #{u_p_id}, now(), 0, 1)
   </insert>
   
   <!--  글 수정 -->
   <update id="update" parameterType="BoardDTO">
      update board
         set b_title = #{b_title},
               b_content = #{b_content},
               b_date = now()
       where b_p_bno = #{b_p_bno}
   </update>
   
   <!--  글 삭제 b_state 컬럼을 작성하여 1로 변경 --> 
   <update id="delete" parameterType="java.lang.Integer">
      update board
         set b_state = 0
       where b_p_bno = #{b_p_bno}
   </update>
   
   <!-- 회원가입 중복방지 아이디 조회 -->
   <select id="Join_sel" parameterType="java.lang.String" resultType="java.lang.Integer">
      SELECT count(u_p_id)
        FROM user
       	where u_p_id = #{u_p_id}
   </select>
   
   <!-- 회원가입 중복방지 닉네임 조회 -->
   <select id="join_nnamesel" parameterType="java.lang.String" resultType="java.lang.Integer">
      SELECT count(u_nname)
        FROM user
       	where u_nname = #{u_nname}
   </select>
   
   <!--  회원가입 -->
   <insert id="Join" parameterType="UserDTO">
      INSERT INTO user(u_p_id, u_p_snumber, u_nname, u_pw, u_name, u_phone, u_address, u_gender , u_mail, u_personaldata, 
      u_advertising, u_state, u_media, u_b_cnt)
          VALUES (#{u_p_id}, #{u_p_snumber}, #{u_nname}, #{u_pw}, #{u_name}, #{u_phone}, #{u_address}, #{u_gender}, #{u_mail},
          #{u_personaldata}, #{u_advertising}, 1, #{u_media}, 0)
   </insert>
   
   <!-- 회원탈퇴 -->
   <update id="my_out" parameterType="UserDTO">
      update user
      set u_state = 0
      WHERE u_p_id = #{u_p_id}
   </update>
   
   <!-- 아이디 찾기 -->
   <select id="id_s_result" parameterType="UserDTO" resultType="UserDTO">
      SELECT u_p_id, u_nname, u_p_snumber, u_pw, u_name, u_phone, u_address, u_gender , u_mail
        FROM user
       WHERE u_name = #{u_name}
       AND u_p_snumber = #{u_p_snumber}
       AND u_phone = #{u_phone}
   </select>
   
   <!-- 비밀번호 찾기 -->
   <select id="pwsearch" parameterType="UserDTO" resultType="UserDTO">
      SELECT u_p_id, u_nname, u_p_snumber, u_pw, u_name, u_phone, u_address, u_gender , u_mail
        FROM user
       WHERE u_name = #{u_name}
       AND u_p_id = #{u_p_id}
       AND u_p_snumber = #{u_p_snumber}
       AND u_phone = #{u_phone}
   </select>
   
   <!-- 가져온값 있는지 1,0으로 체크할때 카운트(지금은 안씀) -->
   <select id="pwsearchCnt" parameterType="UserDTO" resultType="java.lang.Integer">
      SELECT count(*)
        FROM user
       WHERE u_name = #{u_name}
       AND u_p_id = #{u_p_id}
       AND u_p_snumber = #{u_p_snumber}
       AND u_phone = #{u_phone}
   </select>
   
   <!-- 비밀번호 찾기 변경 저장 -->
   <update id="pw_s_result" parameterType="UserDTO">
      update user
      set u_pw = #{u_pw}
       WHERE u_p_id = #{u_p_id}
   </update>
   
   <!--  개인정보 조회 -->
   <select id="my_search" parameterType="java.lang.String" resultType="UserDTO">
      SELECT u_p_id, u_nname, u_pw, u_name, u_phone, u_address, u_gender , u_mail
        FROM user
       WHERE u_p_id = #{u_p_id}
   </select>
   
   <!--  개인정보 수정 저장 -->
   <update id="my_update" parameterType="UserDTO" >
      update user
         set u_phone = #{u_phone},
             u_address = #{u_address},
             u_gender = #{u_gender},
             u_mail = #{u_mail},
             u_pw = #{u_pw}
       where u_p_id = #{u_p_id}
   </update>
   
	<!--장바구니 -->
	<select id="basketdetail" parameterType="java.lang.String" resultType="ProductDTO">
		select b1.b_p_code,b2.b_product,b2.b_price ,b1.u_p_id,b1.b_num
		from basket b1 left outer join board_product b2 on(b1.b_p_code =b2.b_p_code)
		where u_p_id = #{u_p_id}
	</select>
	
	<!-- ajax 장바구니 수정 -->
	<update id="upd_basket" parameterType="BasketDTO">
		update basket
		set b_num = #{b_num}
		where u_p_id = #{u_p_id}
		AND b_p_code = #{b_p_code}
	</update>
	
	<!--장바구니 삭제-->
	<delete id="del_basket" parameterType="BasketDTO">
		DELETE FROM basket
		WHERE u_p_id = #{u_p_id}
		AND b_p_code = #{b_p_code}
	</delete>
	
	<!-- 유저 찜 -->
	<select id="wish" parameterType="WishDTO" resultType="WishDTO">
		select *
		from wish
		where b_p_code = #{b_p_code}
		and u_p_id = #{u_p_id}
	</select>
	
	<!-- ajax shop_detail 찜추가 -->
	<insert id="wish_like" parameterType="WishDTO">
		INSERT INTO wish(u_p_id, b_p_code)
		VALUES (#{u_p_id}, #{b_p_code})
	</insert>
	
	<!-- ajax shop_detail 찜삭제 -->
	<delete id="wish_un" parameterType="WishDTO">
		DELETE FROM wish
		WHERE u_p_id = #{u_p_id}
		AND b_p_code = #{b_p_code}
	</delete>
	
	<!--찜목록-->
	<select id="wishlist" parameterType="java.lang.String" resultType="ProductDTO">
		select b1.b_product, b1.b_price, b1.b_sale, w1.b_p_code, w1.u_p_id
		from wish w1 left outer join board_product b1 on (b1.b_p_code = w1.b_p_code)
		where w1.u_p_id = #{u_p_id}
	</select>
	
	<!-- 찜 개수 표시 -->
	<select id="wish_cnt" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*)
		from wish
		where u_p_id = #{u_p_id}
	</select>
	
	<!--  개인 유저 자유게시판 글 개수 -->
	<select id="user_board_count" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(*)
		FROM board
		where u_p_id = #{u_p_id}
		and b_p_category = "자유게시판"
	</select>
	
	<!-- 개인 유저 리뷰 개수 -->
	<select id="my_review_count" parameterType="java.lang.String" resultType="java.lang.Integer">
		SELECT count(*)
		FROM review
		where u_p_id = #{u_p_id}
	</select>
	
	<!-- 상품 전체리스트 -->
	<select id="shop_list" resultType="ProductDTO">
      SELECT b_p_code, b_product,
      b_price, b_sale, b_discount, b_spoint
      FROM board_product
	</select>

	<!-- 상품(식품) 리스트 조회(F) -->
	<select id="shop_list_F" parameterType="ProductDTO" resultType="ProductDTO">
      SELECT b_p_code, b_product, b_p_category,
      b_price, b_sale, b_discount, b_spoint
      FROM board_product
      WHERE b_p_code like 'F%'
	</select>

	<!-- 상품(식품) 리스트 조회(B) -->
	<select id="shop_list_B" resultType="ProductDTO">
      SELECT b_p_code, b_product, b_p_category,
      b_price, b_sale, b_discount, b_spoint
      FROM board_product
      WHERE b_p_code like 'B%';
	</select>

	<!-- 상품(식품) 리스트 조회(H) -->
	<select id="shop_list_H" resultType="ProductDTO">
      SELECT b_p_code, b_product, b_p_category,
      b_price, b_sale, b_discount, b_spoint
      FROM board_product
      WHERE b_p_code like 'H%';
	</select>

	<!-- 상품(식품) 리스트 조회(J) -->
	<select id="shop_list_J" resultType="ProductDTO">
      SELECT b_p_code, b_product, b_p_category,
      b_price, b_sale, b_discount, b_spoint
      FROM board_product
      WHERE b_p_code like 'J%';
	</select>

	<!-- 상품 상세 조회 -->
	<select id="shop_detail" parameterType="java.lang.String"
      resultType="ProductDTO">
      SELECT *
      FROM board_product
      where b_p_code = #{b_p_code}
	</select>
	
	<!-- 상품 후기 저장 -->
	<insert id="shop_detail_review" parameterType="ReviewDTO">
		insert into review(u_p_id, b_p_code, r_content, r_spoint, r_review, r_date, r_delete)
		values(#{u_p_id}, #{b_p_code}, #{r_content}, #{r_spoint}, 1, now(), 1)
	</insert>
	
	<!-- 상품 문의 저장 -->
	<insert id="shop_detail_inquiry" parameterType="InquiryDTO">
		insert into inquiry(u_p_id, b_p_code, b_product, i_content, i_answer, i_date, i_state)
		values(#{u_p_id}, #{b_p_code}, #{b_product}, #{i_content}, 1, now(), 2)
	</insert>

	<!-- 조회수 증가 -->
	<update id="updateReadCnt" parameterType="java.lang.Integer">
		update board
		set b_v_cnt = b_v_cnt + 1 where b_p_bno = #{b_p_bno}
	</update>
	
	<!-- 상품 검색 -->
	<select id="search" parameterType="java.lang.String" resultType="ProductDTO">
		SELECT *
		  FROM board_product
		  <if test="_parameter != ''">
		 WHERE b_product LIKE CONCAT ('%',#{keyWord},'%')
		 </if>
		 <if test="_parameter == ''">
		 WHERE 1 != 1
		 </if>
	</select>
	
	<!-- ajax 디테일서 장바구니 조회 -->
	<select id="detail_basket" parameterType="BasketDTO" resultType="BasketDTO">
		SELECT *
		FROM basket
		where b_p_code = #{b_p_code}
		AND u_p_id = #{u_p_id}
	</select>
	
	<!-- ajax 디테일서 장바구니 담기 -->
	<insert id="ins_basket" parameterType="BasketDTO">
		INSERT INTO basket(u_p_id, b_p_code, b_num)
		VALUES (#{u_p_id}, #{b_p_code}, #{b_num})
	</insert>

	<!-- 상품 리뷰 조회 -->
	<select id="shop_review" parameterType="java.lang.String"
      resultType="ReviewDTO">
      SELECT *
      FROM review
      where b_p_code = #{b_p_code}
	</select>
	
	<!-- 상품별 리뷰 개수 -->
	<select id="shop_review_cnt" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*)
		from review
		where b_p_code = #{b_p_code}
	</select>

	<!-- 상품 문의 조회 -->
	<select id="shop_inquiry" parameterType="java.lang.String"
      resultType="InquiryDTO">
      SELECT *
      FROM inquiry
      where b_p_code = #{b_p_code}
	</select>
	
	<!-- 상품별 문의 개수 -->
	<select id="shop_inquiry_cnt" parameterType="java.lang.String" resultType="java.lang.Integer">
		select count(*)
		from inquiry
		where b_p_code = #{b_p_code}
	</select>
	
	<!-- 문의 저장 -->
	<insert id="qnainsert" parameterType="BoardDTO">
	insert into board(b_p_bno, b_p_category, b_title, b_content, u_p_id, b_date, b_v_cnt, b_state) 
	values(#{b_p_bno},"1:1문의",#{b_title},#{b_content},#{u_p_id},now(), 0,2)
	</insert>
	
	<!-- 신고 저장 -->
	<insert id="reportinsert" parameterType="BoardDTO">
	insert into board(b_p_bno,b_p_category,b_title,b_content,u_p_id,b_date,b_v_cnt,b_state) 
	values(#{b_p_bno},"신고내역",#{b_title},#{b_content},#{u_p_id},now(), 0,2)
	</insert>
	
	 <!-- 관리자 문의 내역 불러오기 -->
   <select id="qalist" parameterType="java.lang.String" resultType="BoardDTO">
    SELECT  b_p_bno , b_title, b_date ,u_p_id , b_state , b_p_category
   FROM board
    WHERE b_p_category = "1:1문의"
    AND b_state in ("2","3")
    ORDER BY b_date DESC
   </select>
   
   <!--  관리자 문의 처리완료 -->
   <update id="qa_gmresult" parameterType="java.lang.Integer" >
      update board
         set b_state = 3
       where b_p_bno = #{b_p_bno}
   </update>
   
   <!-- 관리자 신고 내역 불러오기 -->
   <select id="rplist" parameterType="java.lang.String" resultType="BoardDTO">
    SELECT  b_p_bno , b_title, b_date ,u_p_id , b_state , b_p_category
	FROM board
	WHERE b_p_category = "신고내역"
	AND b_state in ("2","3")
	ORDER BY b_date DESC;
   </select>
   
   <!--  관리자 신고 처리완료 -->
   <update id="rp_gmresult" parameterType="java.lang.Integer" >
      update board
         set b_state = 3
       where b_p_bno = #{b_p_bno}
   </update>
   
   <!-- 관리자 상품 문의 내역 불러오기 -->
   <select id="shop_inquiry_gm" resultType="InquiryDTO">
		SELECT *
		FROM inquiry
   </select>
   
   <!-- 관리자 상품 문의 내역 읽기 -->
   <select id="inquirydetail" parameterType="java.lang.Integer" resultType="InquiryDTO">
		SELECT *
		FROM inquiry
		where i_p_num = #{i_p_num}
   </select>
   
   <!-- 관리자 상품 문의 내역 저장 -->
   <update id="inquirydetail_result" parameterType="InquiryDTO" >
      update inquiry
         set i_state = 3,
         	i_answer = #{i_answer}
       where i_p_num = #{i_p_num}
   </update>
   
   <!-- 관리자 유저 정보 조회 및 수정 -->
   <select id="update_gm" parameterType="java.lang.String" resultType="UserDTO">
		select *
		from user
		where u_p_id = #{u_p_id}
   </select>
   
   <!-- 관리자 유저 정보 조회 및 수정 저장 -->
   <update id="update_gm_up" parameterType="UserDTO">
		update user
         set u_phone = #{u_phone},
             u_address = #{u_address},
             u_gender = #{u_gender},
             u_mail = #{u_mail},
             u_pw = #{u_pw},
             u_b_cnt = #{u_b_cnt}
       where u_p_id = #{u_p_id}
   </update>
   
   <!-- 관리자 유저 정보 조회 및 수정 (멤버십 쿠폰확인버전..)
   <select id="update_gm" parameterType="java.lang.String" resultMap="UserDTO">
		select u.*, m.m_u_coupon
		from member_user m left outer join user u on (u.u_p_id = m.u_p_id)
		where m.u_p_id = #{u_p_id}
   </select> -->
   
   <!-- 유저 전체조회 -->
   <select id="searchlist" parameterType="UserDTO" resultType="UserDTO">
    SELECT u_p_id, u_name, u_b_cnt 
   FROM user
   </select>
   
   <!--유저정보조회-->
   <select id="ulist" parameterType="java.lang.String" resultType="UserDTO">
   select u_name,u_phone,u_address
   from user
   where u_p_id =#{u_p_id}
   </select>
   
   <!-- 개인유저 문의 내역 -->
   <select id="my_qalist" parameterType="java.lang.String" resultType="BoardDTO">
    SELECT  b_p_bno , b_title, b_date ,u_p_id , b_state 
   FROM board
    WHERE u_p_id = #{u_p_id}
    AND b_p_category = "1:1문의"
    AND b_state in ("2","3")
    ORDER BY b_date DESC
   </select>
   
   <!--개인 문의 글 읽기 -->
   <select id="qadetail" parameterType="java.lang.Integer" resultType="BoardDTO">
      SELECT *
      FROM board
      where b_p_bno = #{b_p_bno}
   </select>
   
   <!--신고 글 읽기 -->
   <select id="rpdetail" parameterType="java.lang.Integer" resultType="BoardDTO">
      SELECT *
      FROM board
      where b_p_bno = #{b_p_bno}
   </select>
   
   <!-- 개인유저 신고 내역 -->
   <select id="my_rplist" parameterType="java.lang.String" resultType="BoardDTO">
    SELECT  b_p_bno , b_title, b_date ,u_p_id , b_state 
   FROM board
    WHERE u_p_id = #{u_p_id}
    AND b_p_category = "신고내역"
    AND b_state in ("2","3")
    ORDER BY b_date DESC
   </select>
   
   <!-- 개인 유저 리뷰 내역 -->
   <select id="my_review" parameterType="ReviewDTO" resultType="ReviewDTO">
      SELECT *
      FROM review
      where u_p_id = #{u_p_id}
   </select>
   
   <!-- 개인 유저 상품문의 내역 조회 -->
   <select id="my_inquirylist" parameterType="java.lang.String" resultType="InquiryDTO">
    SELECT *
	FROM inquiry
    WHERE u_p_id = #{u_p_id}
    ORDER BY i_date DESC
   </select>
   
   <!--  로그인 처리를 위한 SQL -->
   <select id="login" parameterType="java.util.Map" resultType="java.util.Map">
      SELECT u_p_id, u_nname, u_state
        FROM user
       WHERE u_state != 0
         AND u_state != 2
         AND u_p_id = #{u_p_id}
         AND u_pw = #{u_pw}
   </select>
   
   <!-- 댓글목록 조회(게시글번호에 해당하는 조회) -->
   <select id="sel_reply" parameterType="java.lang.Integer" resultType="BoardReply">
      SELECT b_r_p_reno, u_p_id, b_r_content, b_r_date, b_p_bno, b_r_state
        FROM board_reply
       WHERE b_p_bno = #{b_p_bno}
       AND b_r_state != 0
     ORDER BY b_r_p_reno desc
   </select>

   <!-- 댓글 쓰기 -->
   <insert id="ins_reply" parameterType="BoardReply">
      INSERT INTO board_reply(u_p_id, b_r_content, b_r_date, b_p_bno, b_r_state)
          VALUES (#{u_p_id}, #{b_r_content}, now(), #{b_p_bno}, 1)
   </insert>
   
   <!-- 해당 댓글 읽기  -->
   <select id="detailreply" parameterType="java.lang.Integer" resultType="BoardReply">
      SELECT b_r_p_reno, u_p_id, b_r_content, b_r_date, b_p_bno
        FROM board_reply
       WHERE b_r_p_reno = #{b_r_p_reno}
   </select>

   <!-- 댓글 수정 -->
   <update id="upd_reply" parameterType="BoardReply">
      update board_reply
         set u_p_id = #{u_p_id},
               b_r_content = #{b_r_content},
               b_r_date = now()
       where b_r_p_reno = #{b_r_p_reno} 
   </update>

   <!-- 댓글 삭제 -->
   <update id="del_reply" parameterType="BoardReply">
      update board_reply 
      set b_r_state = 0
	  WHERE b_r_p_reno = #{b_r_p_reno} 
   </update>

   <!--  조회수 증가 -->
   <!--
   <update id="updateReadCnt" parameterType="java.lang.Integer">
      update board
         set readcnt = readcnt + 1
       where bno = #{bno}
   </update>
   -->

     
</mapper>